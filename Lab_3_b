//Circular queue 
import java.util.Scanner; 
public class CircularQueue { 
 int size; 
 int front = -1; 
 int rear = -1; 
 int[] queue; 
 CircularQueue(int size) { 
 this.size = size; 
 queue = new int[size]; 
 } 
 void enqueue(int value) { 
 if ((rear + 1) % size == front) { 
 System.out.println("Queue is Full (Overflow)");  return; 
 } 
 if (front == -1) { // First element insertion  front = 0; 
 rear = 0; 
 } else { 
 rear = (rear + 1) % size; 
 } 
 queue[rear] = value; 
 System.out.println(value + " enqueued");  } 
 void dequeue() { 
 if (front == -1) { 
 System.out.println("Queue is Empty");  return; 
 } 
 System.out.println(queue[front] + " dequeued");  if (front == rear) { // Only one element was present  front = -1; 
 rear = -1; 
 } else { 
 front = (front + 1) % size; 
 } 
 } 
 void peek() { 
 if (front == -1) { 
 System.out.println("Queue is Empty");  return; 
 } 
 System.out.println("Front element: " + queue[front]);  } 
 void display() { 
 if (front == -1) { 
 System.out.println("Queue is Empty");  return; 
 }
 System.out.print("Queue: "); 
 int i = front; 
 while (true) { 
 System.out.print(queue[i] + " "); 
 if (i == rear) 
 break; 
 i = (i + 1) % size; 
 } 
 System.out.println(); 
 } 
 public static void main(String[] args) { 
 Scanner scanner = new Scanner(System.in); 
 System.out.print("Enter queue size: "); 
 int size = scanner.nextInt(); 
 CircularQueue q = new CircularQueue(size); 
 while (true) { 
 System.out.println("\nQueue Operations");  System.out.println("1. Enqueue"); 
 System.out.println("2. Dequeue"); 
 System.out.println("3. Peek"); 
 System.out.println("4. Display"); 
 System.out.println("5. Exit"); 
 System.out.print("Choose an option: "); 
 int choice = scanner.nextInt(); 
 switch (choice) { 
 case 1: 
 System.out.print("Enter value to enqueue: ");  int value = scanner.nextInt(); 
 q.enqueue(value); 
 break; 
 case 2: 
 q.dequeue(); 
 break; 
 case 3: 
 q.peek(); 
 break; 
 case 4: 
 q.display(); 
 break; 
 case 5: 
 System.out.println("Exiting"); 
 scanner.close(); 
 return; 
 default: 
 System.out.println("Invalid choice. Try again.");  } 
 } 
 } 
} 
